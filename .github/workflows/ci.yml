name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
      
      - name: Run tests
        run: |
          pytest

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERSION_PREFIX: 0.1
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Create ZIP package
        run: |
          mkdir -p release/custom_components
          cp -r custom_components/aws release/custom_components/
          cd release
          zip -r ../aws.zip .
      
      - name: Create prerelease
        run: |
          # Generate version based on GitHub run number
          VERSION="${VERSION_PREFIX}.${{ github.run_number }}"
          echo "Using version: $VERSION (with GitHub run #${{ github.run_number }})"
          
          # Create new release with a version tag
          gh release create "v$VERSION" \
            --title "v$VERSION" \
            --notes "Automated build from main branch" \
            --prerelease \
            aws.zip LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 